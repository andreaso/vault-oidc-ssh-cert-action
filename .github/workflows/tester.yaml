---

name: Self-test

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main

permissions:
  contents: read
  id-token: write

jobs:
  integration:
    name: Integration test
    runs-on: ${{ matrix.os }}

    strategy:
      matrix:
        backend:
          - vault
        os:
          - ubuntu-22.04
          - ubuntu-22.04-arm
          - ubuntu-24.04
          - ubuntu-24.04-arm
        include:
          - backend: bao
            os: ubuntu-24.04

    steps:
      - name: Check out repository
        uses: actions/checkout@v5
        with:
          persist-credentials: false

      - name: Bring up server
        run: docker compose -f ".github/integration/${BACKEND}-compose.yaml" up --wait --detach "${BACKEND}-server"
        env:
          BACKEND: ${{ matrix.backend }}

      - name: Configure server
        run: docker compose -f ".github/integration/${BACKEND}-compose.yaml" run --no-deps "${BACKEND}-setup"
        env:
          BACKEND: ${{ matrix.backend }}

      - name: Run self
        id: ssh_cert
        uses: ./
        with:
          vault_server: http://127.0.0.1:8200
          jwt_oidc_backend_path: github-oidc
          jwt_oidc_role: cert-action-user
          ssh_backend_path: arrakis/ssh2
          ssh_role: cert-action-cert

      - name: Examine generated certificate
        run: ssh-keygen -L -f "$ssh_cert_path"
        env:
          ssh_cert_path: ${{ steps.ssh_cert.outputs.cert_path }}

      - name: Run self, with audience conf
        id: ssh_cert_aud
        uses: ./
        with:
          vault_server: http://127.0.0.1:8200
          jwt_audience: a-test-audience
          jwt_oidc_backend_path: github-oidc
          jwt_oidc_role: cert-action-at-user
          ssh_backend_path: arrakis/ssh2
          ssh_role: cert-action-cert

      - name: Examine second generated certificate
        run: ssh-keygen -L -f "$ssh_cert_path"
        env:
          ssh_cert_path: ${{ steps.ssh_cert_aud.outputs.cert_path }}
